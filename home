#!/usr/bin/env bash

copy_file() {
    local SOURCE="$1"
    local TARGET="$2"
    local ARCHIVE_MSG=""

    # Create parent directory if it doesn't exist
    mkdir -p "$(dirname "$TARGET")"

    # Archive existing file if it exists and is a regular file
    if [ -f "$TARGET" ]; then
        mkdir -p $HOME/.archive
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        ARCHIVE_FILE="$HOME/.archive/$(basename $TARGET).$TIMESTAMP"
        cp "$TARGET" "$ARCHIVE_FILE"
        ARCHIVE_MSG=" (archived to ${ARCHIVE_FILE/$HOME/~})"
    fi

    # Remove existing file/symlink if it exists
    if [ -e "$TARGET" ] || [ -L "$TARGET" ]; then
        rm -rf $TARGET
    fi

    echo "${TARGET/$HOME/~}: ${SOURCE/$HOME/~}$ARCHIVE_MSG"
    cp -r $SOURCE $TARGET
}

copy_dir_contents() {
    local SOURCE="$1"
    local TARGET="$2"

    # Create target directory if it doesn't exist
    mkdir -p "$TARGET"

    echo "${TARGET/$HOME/~}/*: ${SOURCE/$HOME/~}/*"
    cp -r $SOURCE/* $TARGET/
}

copy_emacs_d() {
    local SOURCE="$1"
    local TARGET="$2"
    local ARCHIVE_MSG=""
    local TEMP_ELPA="/tmp/emacs.d.elpa.$(date +%s).tmp"

    # If .emacs.d exists, preserve the elpa directory
    if [ -d "$TARGET" ]; then
        # Archive the entire .emacs.d first
        mkdir -p $HOME/.archive
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        ARCHIVE_FILE="$HOME/.archive/emacs.d.$TIMESTAMP"
        cp -r "$TARGET" "$ARCHIVE_FILE"
        ARCHIVE_MSG=" (archived to ${ARCHIVE_FILE/$HOME/~})"

        # Save elpa directory if it exists
        if [ -d "$TARGET/elpa" ]; then
            mv "$TARGET/elpa" "$TEMP_ELPA"
        fi

        # Remove the old .emacs.d
        rm -rf "$TARGET"
    fi

    # Determine if elpa will be preserved
    local PRESERVED_MSG=""
    if [ -d "$TEMP_ELPA" ]; then
        PRESERVED_MSG=" (preserved ~/.emacs.d/elpa)"
    fi

    echo "${TARGET/$HOME/~}: ${SOURCE/$HOME/~}$ARCHIVE_MSG$PRESERVED_MSG"

    # Copy new .emacs.d
    cp -r "$SOURCE" "$TARGET"

    # Restore elpa directory if it was saved
    if [ -d "$TEMP_ELPA" ]; then
        rm -rf "$TARGET/elpa" 2>/dev/null  # Remove any elpa from source
        mv "$TEMP_ELPA" "$TARGET/elpa"
    fi
}

# Get the directory where this script is located
SRC="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Shell configuration
copy_file $SRC/sh/zshrc $HOME/.zshrc

# Emacs configuration
copy_file $SRC/emacs/emacs $HOME/.emacs
copy_emacs_d $SRC/emacs/emacs.d $HOME/.emacs.d

