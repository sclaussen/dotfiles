#!/usr/bin/env bash

copy_file() {
    local SOURCE="$1"
    local TARGET="$2"

    # Create parent directory if it doesn't exist
    mkdir -p "$(dirname "$TARGET")"

    # Remove existing file/symlink if it exists
    if [ -e "$TARGET" ] || [ -L "$TARGET" ]; then
        rm -rf $TARGET
    fi

    echo "Copying $SOURCE -> $TARGET"
    cp -r $SOURCE $TARGET
}

copy_dir_contents() {
    local SOURCE="$1"
    local TARGET="$2"

    # Create target directory if it doesn't exist
    mkdir -p "$TARGET"

    echo "Copying contents of $SOURCE -> $TARGET"
    cp -r $SOURCE/* $TARGET/
}

# Get the directory where this script is located
SRC="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Shell configuration
copy_file $SRC/sh/zshrc $HOME/.zshrc

# Emacs configuration
copy_file $SRC/emacs/emacs $HOME/.emacs
copy_file $SRC/emacs/emacs.d $HOME/.emacs.d

# Claude configuration
# Archive existing settings.json before overwriting
if [ -f "$HOME/.claude/settings.json" ]; then
    mkdir -p $HOME/.archive
    TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
    cp $HOME/.claude/settings.json $HOME/.archive/settings.json.$TIMESTAMP
    echo "Archived existing settings.json to $HOME/.archive/settings.json.$TIMESTAMP"
fi
copy_file $SRC/claude/settings.json $HOME/.claude/settings.json
copy_dir_contents $SRC/claude/commands $HOME/.claude/commands
copy_dir_contents $SRC/claude/scripts $HOME/.claude/scripts

# Devcontainer configuration
mkdir -p $HOME/.devcontainer

# Archive existing devcontainer.json before overwriting
if [ -f "$HOME/.devcontainer/devcontainer.json" ]; then
    mkdir -p $HOME/.archive
    TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
    cp $HOME/.devcontainer/devcontainer.json $HOME/.archive/devcontainer.json.$TIMESTAMP
    echo "Archived existing devcontainer.json to $HOME/.archive/devcontainer.json.$TIMESTAMP"
fi
copy_file $SRC/devcontainer/devcontainer.json $HOME/.devcontainer/devcontainer.json
