#!/usr/bin/env bash

copy_file() {
    local SOURCE="$1"
    local TARGET="$2"
    local ARCHIVE_MSG=""

    # Create parent directory if it doesn't exist
    mkdir -p "$(dirname "$TARGET")"

    # Archive existing file if it exists and is a regular file
    if [ -f "$TARGET" ]; then
        mkdir -p $REPO/.archive
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        ARCHIVE_FILE="$REPO/.archive/$(basename $TARGET).$TIMESTAMP"
        cp "$TARGET" "$ARCHIVE_FILE"
        ARCHIVE_MSG=" (archived to .archive/$(basename $TARGET).$TIMESTAMP)"
    fi

    # Remove existing file/symlink if it exists
    if [ -e "$TARGET" ] || [ -L "$TARGET" ]; then
        rm -rf $TARGET
    fi

    # Make paths relative to current directory
    local REL_TARGET="${TARGET#./}"
    local REL_SOURCE="${SOURCE/$HOME/~}"
    echo "$REL_TARGET: $REL_SOURCE$ARCHIVE_MSG"
    cp -r $SOURCE $TARGET
}

copy_dir_contents() {
    local SOURCE="$1"
    local TARGET="$2"

    # Create target directory if it doesn't exist
    mkdir -p "$TARGET"

    # Make paths relative to current directory
    local REL_TARGET="${TARGET#./}"
    local REL_SOURCE="${SOURCE/$HOME/~}"
    echo "$REL_TARGET/*: $REL_SOURCE/*"
    cp -r $SOURCE/* $TARGET/
}

setup_claude() {
    # Claude configuration
    mkdir -p $REPO/.claude
    copy_file $SOURCE/claude/settings.json $REPO/.claude/settings.json
    copy_dir_contents $SOURCE/claude/commands $REPO/.claude/commands
    copy_dir_contents $SOURCE/claude/scripts $REPO/.claude/scripts
}

setup_devcontainer() {
    # Devcontainer configuration
    mkdir -p $REPO/.devcontainer
    copy_file $SOURCE/devcontainer/devcontainer.json $REPO/.devcontainer/devcontainer.json
}

# Get the directory where this script is located
SOURCE="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO="."

# Parse command line arguments
if [ "$#" -eq 0 ]; then
    # No arguments - run both
    # Ensure .archive is in .gitignore
    if [ -f "$REPO/.gitignore" ]; then
        if ! grep -q "^\.archive$" $REPO/.gitignore; then
            echo ".archive" >> $REPO/.gitignore
            echo ".gitignore: Added .archive"
        fi
    else
        echo ".archive" > $REPO/.gitignore
        echo ".gitignore: Created with .archive"
    fi

    setup_claude
    setup_devcontainer
elif [ "$1" = "-c" ]; then
    # Claude only
    # Ensure .archive is in .gitignore
    if [ -f "$REPO/.gitignore" ]; then
        if ! grep -q "^\.archive$" $REPO/.gitignore; then
            echo ".archive" >> $REPO/.gitignore
            echo ".gitignore: Added .archive"
        fi
    else
        echo ".archive" > $REPO/.gitignore
        echo ".gitignore: Created with .archive"
    fi

    setup_claude
elif [ "$1" = "-d" ]; then
    # Devcontainer only
    # Ensure .archive is in .gitignore
    if [ -f "$REPO/.gitignore" ]; then
        if ! grep -q "^\.archive$" $REPO/.gitignore; then
            echo ".archive" >> $REPO/.gitignore
            echo ".gitignore: Added .archive"
        fi
    else
        echo ".archive" > $REPO/.gitignore
        echo ".gitignore: Created with .archive"
    fi

    setup_devcontainer
else
    echo "Usage: $0 [-c|-d]"
    echo "  -c  Install Claude configuration only"
    echo "  -d  Install devcontainer configuration only"
    echo "  (no args)  Install both configurations"
    exit 1
fi